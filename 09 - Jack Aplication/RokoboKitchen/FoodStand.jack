// Implements the drawing process of the Food stand

class FoodStand {
    field int x;
    field int y;

    field int row0col0;
    field int row0col1;
    field int row0col2;
    field int row0col3;
    field int row0col4;
    field int row0col5;
    field int row0col6;
    field int row0col7;
    field int row0col8;
    field int row0col9;
    field int row1col0;
    field int row1col1;
    field int row1col2;
    field int row1col3;
    field int row1col4;
    field int row1col5;
    field int row1col6;
    field int row1col7;
    field int row1col8;
    field int row1col9;
    field int row2col0;
    field int row2col1;
    field int row2col2;
    field int row2col3;
    field int row2col4;
    field int row2col5;
    field int row2col6;
    field int row2col7;
    field int row2col8;
    field int row2col9;    

    constructor FoodStand new(int col, int row) {
        // Calculated using 16 bit sections:
        // location = 16384 + x + y*512
        let x = col;
        let y = row;

        let row0col0 = 16384 + x + (y * 512);
        let row0col1 = 16384 + (x + 1) + (y * 512);
        let row0col2 = 16384 + (x + 2) + (y * 512);
        let row0col3 = 16384 + (x + 3) + (y * 512);
        let row0col4 = 16384 + (x + 4) + (y * 512);
        let row0col5 = 16384 + (x + 5) + (y * 512);
        let row0col6 = 16384 + (x + 6) + (y * 512);
        let row0col7 = 16384 + (x + 7) + (y * 512);
        let row0col8 = 16384 + (x + 8) + (y * 512);
        let row0col9 = 16384 + (x + 9) + (y * 512);

        let row1col0 = 16384 + x + ((y + 1) * 512);
        let row1col1 = 16384 + (x + 1) + ((y + 1) * 512);
        let row1col2 = 16384 + (x + 2) + ((y + 1) * 512);
        let row1col3 = 16384 + (x + 3) + ((y + 1) * 512);
        let row1col4 = 16384 + (x + 4) + ((y + 1) * 512);
        let row1col5 = 16384 + (x + 5) + ((y + 1) * 512);
        let row1col6 = 16384 + (x + 6) + ((y + 1) * 512);
        let row1col7 = 16384 + (x + 7) + ((y + 1) * 512);
        let row1col8 = 16384 + (x + 8) + ((y + 1) * 512);
        let row1col9 = 16384 + (x + 9) + ((y + 1) * 512);
        
        let row2col0 = 16384 + x + ((y + 2) * 512);
        let row2col1 = 16384 + (x + 1) + ((y + 2) * 512);
        let row2col2 = 16384 + (x + 2) + ((y + 2) * 512);
        let row2col3 = 16384 + (x + 3) + ((y + 2) * 512);
        let row2col4 = 16384 + (x + 4) + ((y + 2) * 512);
        let row2col5 = 16384 + (x + 5) + ((y + 2) * 512);
        let row2col6 = 16384 + (x + 6) + ((y + 2) * 512);
        let row2col7 = 16384 + (x + 7) + ((y + 2) * 512);
        let row2col8 = 16384 + (x + 8) + ((y + 2) * 512);
        let row2col9 = 16384 + (x + 9) + ((y + 2) * 512);
        return this;
    }
    method void draw0() {
        // First col
        do Memory.poke(row0col0+0, -1);
        do Memory.poke(row0col0+32, 1);
        do Memory.poke(row0col0+64, 15361);
        do Memory.poke(row0col0+96, 16897);
        do Memory.poke(row0col0+128, -32383);
        do Memory.poke(row0col0+160, -31167);
        do Memory.poke(row0col0+192, -26591);
        do Memory.poke(row0col0+224, -32735);
        do Memory.poke(row0col0+256, 16593);
        do Memory.poke(row0col0+288, -17143);
        do Memory.poke(row0col0+320, 16905);
        do Memory.poke(row0col0+352, -32375);
        do Memory.poke(row0col0+384, -31159);
        do Memory.poke(row0col0+416, -26583);
        do Memory.poke(row0col0+448, -32719);
        do Memory.poke(row0col0+480, 16593);

        do Memory.poke(row1col0+0, -17143);
        do Memory.poke(row1col0+32, 16905);
        do Memory.poke(row1col0+64, -32375);
        do Memory.poke(row1col0+96, -31159);
        do Memory.poke(row1col0+128, -26583);
        do Memory.poke(row1col0+160, -32719);
        do Memory.poke(row1col0+192, 16593);
        do Memory.poke(row1col0+224, -24311);
        do Memory.poke(row1col0+256, 4105);
        do Memory.poke(row1col0+288, 2057);
        do Memory.poke(row1col0+320, 1033);
        do Memory.poke(row1col0+352, 1545);
        do Memory.poke(row1col0+384, -30447);
        do Memory.poke(row1col0+416, 28897);
        do Memory.poke(row1col0+448, 1);
        do Memory.poke(row1col0+480, -1);

        do Memory.poke(row2col0+0, -1);
        do Memory.poke(row2col0+32, 1);
        do Memory.poke(row2col0+64, -25375);
        do Memory.poke(row2col0+96, -23263);
        do Memory.poke(row2col0+128, -25375);
        do Memory.poke(row2col0+160, -23263);
        do Memory.poke(row2col0+192, -23327);
        do Memory.poke(row2col0+224, 1);
        do Memory.poke(row2col0+256, -1);
        do Memory.poke(row2col0+288, 30);
        do Memory.poke(row2col0+320, 30);
        do Memory.poke(row2col0+352, -2);
        do Memory.poke(row2col0+384, 30);
        do Memory.poke(row2col0+416, -2);
        do Memory.poke(row2col0+448, 30);
        do Memory.poke(row2col0+480, 30);

        // Second col
        do Memory.poke(row0col1+0, -1);
        do Memory.poke(row0col1+32, -16384);
        do Memory.poke(row0col1+64, -28898);
        do Memory.poke(row0col1+96, -28511);
        do Memory.poke(row0col1+128, -24512);
        do Memory.poke(row0col1+160, -24125);
        do Memory.poke(row0col1+192, -23996);
        do Memory.poke(row0col1+224, -24512);
        do Memory.poke(row0col1+256, -28640);
        do Memory.poke(row0col1+288, -28834);
        do Memory.poke(row0col1+320, -28511);
        do Memory.poke(row0col1+352, -24512);
        do Memory.poke(row0col1+384, -24125);
        do Memory.poke(row0col1+416, -23996);
        do Memory.poke(row0col1+448, -24512);
        do Memory.poke(row0col1+480, -28640);

        do Memory.poke(row1col1+0, -28834);
        do Memory.poke(row1col1+32, -28511);
        do Memory.poke(row1col1+64, -24512);
        do Memory.poke(row1col1+96, -24125);
        do Memory.poke(row1col1+128, -23996);
        do Memory.poke(row1col1+160, -24512);
        do Memory.poke(row1col1+192, -28640);
        do Memory.poke(row1col1+224, -30640);
        do Memory.poke(row1col1+256, -31736);
        do Memory.poke(row1col1+288, -32252);
        do Memory.poke(row1col1+320, -32510);
        do Memory.poke(row1col1+352, -32637);
        do Memory.poke(row1col1+384, -32700);
        do Memory.poke(row1col1+416, -32712);
        do Memory.poke(row1col1+448, -16384);
        do Memory.poke(row1col1+480, -1);

        do Memory.poke(row2col1+0, -1);
        do Memory.poke(row2col1+32, -16384);
        do Memory.poke(row2col1+64, -31813);
        do Memory.poke(row2col1+96, -31576);
        do Memory.poke(row2col1+128, -31559);
        do Memory.poke(row2col1+160, -31576);
        do Memory.poke(row2col1+192, -31829);
        do Memory.poke(row2col1+224, -16384);
        do Memory.poke(row2col1+256, -1);
        do Memory.poke(row2col1+288, 30720);
        do Memory.poke(row2col1+320, 30720);
        do Memory.poke(row2col1+352, -1);
        do Memory.poke(row2col1+384, 30720);
        do Memory.poke(row2col1+416, -1);
        do Memory.poke(row2col1+448, 30720);
        do Memory.poke(row2col1+480, 30720);

        // Third col
        do Memory.poke(row0col2+0, -1);
        do Memory.poke(row0col2+32, 1);
        do Memory.poke(row0col2+64, 8189);
        do Memory.poke(row0col2+96, -26955);
        do Memory.poke(row0col2+128, 21845);
        do Memory.poke(row0col2+160, 22389);
        do Memory.poke(row0col2+192, 18441);
        do Memory.poke(row0col2+224, 18417);
        do Memory.poke(row0col2+256, 16385);
        do Memory.poke(row0col2+288, 18417);
        do Memory.poke(row0col2+320, 18441);
        do Memory.poke(row0col2+352, -26763);
        do Memory.poke(row0col2+384, 5461);
        do Memory.poke(row0col2+416, 5813);
        do Memory.poke(row0col2+448, -3643);
        do Memory.poke(row0col2+480, 5813);

        do Memory.poke(row1col2+0, -2731);
        do Memory.poke(row1col2+32, -18571);
        do Memory.poke(row1col2+64, -10231);
        do Memory.poke(row1col2+96, 16369);
        do Memory.poke(row1col2+128, -10623);
        do Memory.poke(row1col2+160, -21887);
        do Memory.poke(row1col2+192, -4479);
        do Memory.poke(row1col2+224, 257);
        do Memory.poke(row1col2+256, -259);
        do Memory.poke(row1col2+288, -12107);
        do Memory.poke(row1col2+320, 20693);
        do Memory.poke(row1col2+352, -12043);
        do Memory.poke(row1col2+384, 8393);
        do Memory.poke(row1col2+416, -16143);
        do Memory.poke(row1col2+448, 1);
        do Memory.poke(row1col2+480, -1);

        do Memory.poke(row2col2+0, -1);
        do Memory.poke(row2col2+32, 1);
        do Memory.poke(row2col2+64, -9287);
        do Memory.poke(row2col2+96, -21871);
        do Memory.poke(row2col2+128, -21871);
        do Memory.poke(row2col2+160, -30063);
        do Memory.poke(row2col2+192, -29807);
        do Memory.poke(row2col2+224, 1);
        do Memory.poke(row2col2+256, -1);
        do Memory.poke(row2col2+288, 30);
        do Memory.poke(row2col2+320, 30);
        do Memory.poke(row2col2+352, -1);
        do Memory.poke(row2col2+384, 30);
        do Memory.poke(row2col2+416, -1);
        do Memory.poke(row2col2+448, 30);
        do Memory.poke(row2col2+480, 30);

        // Fourth col
        do Memory.poke(row0col3+0, -1);
        do Memory.poke(row0col3+32, -16384);
        do Memory.poke(row0col3+64, -32641);
        do Memory.poke(row0col3+96, -32640);
        do Memory.poke(row0col3+128, -32393);
        do Memory.poke(row0col3+160, -32427);
        do Memory.poke(row0col3+192, -32405);
        do Memory.poke(row0col3+224, -28900);
        do Memory.poke(row0col3+256, -28309);
        do Memory.poke(row0col3+288, -20651);
        do Memory.poke(row0col3+320, -21641);
        do Memory.poke(row0col3+352, -21120);
        do Memory.poke(row0col3+384, -23553);
        do Memory.poke(row0col3+416, -21144);
        do Memory.poke(row0col3+448, -21848);
        do Memory.poke(row0col3+480, -20760);

        do Memory.poke(row1col3+0, -28654);
        do Memory.poke(row1col3+32, -28702);
        do Memory.poke(row1col3+64, -32766);
        do Memory.poke(row1col3+96, -28898);
        do Memory.poke(row1col3+128, -28382);
        do Memory.poke(row1col3+160, -20642);
        do Memory.poke(row1col3+192, -21674);
        do Memory.poke(row1col3+224, -21157);
        do Memory.poke(row1col3+256, -23737);
        do Memory.poke(row1col3+288, -21158);
        do Memory.poke(row1col3+320, -21675);
        do Memory.poke(row1col3+352, -20643);
        do Memory.poke(row1col3+384, -28384);
        do Memory.poke(row1col3+416, -28897);
        do Memory.poke(row1col3+448, -16384);
        do Memory.poke(row1col3+480, -1);

        do Memory.poke(row2col3+0, -1);
        do Memory.poke(row2col3+32, -16384);
        do Memory.poke(row2col3+64, -28946);
        do Memory.poke(row2col3+96, -30134);
        do Memory.poke(row2col3+128, -30130);
        do Memory.poke(row2col3+160, -30134);
        do Memory.poke(row2col3+192, -29110);
        do Memory.poke(row2col3+224, -16384);
        do Memory.poke(row2col3+256, -1);
        do Memory.poke(row2col3+288, 30720);
        do Memory.poke(row2col3+320, 30720);
        do Memory.poke(row2col3+352, -1);
        do Memory.poke(row2col3+384, 30720);
        do Memory.poke(row2col3+416, -1);
        do Memory.poke(row2col3+448, 30720);
        do Memory.poke(row2col3+480, 30720);

        // Fifth col
        do Memory.poke(row0col4+0, -1);
        do Memory.poke(row0col4+32, 1);
        do Memory.poke(row0col4+64, 3969);
        do Memory.poke(row0col4+96, 12385);
        do Memory.poke(row0col4+128, 20369);
        do Memory.poke(row0col4+160, -16407);
        do Memory.poke(row0col4+192, -16407);
        do Memory.poke(row0col4+224, 32757);
        do Memory.poke(row0col4+256, 26613);
        do Memory.poke(row0col4+288, 26613);
        do Memory.poke(row0col4+320, 32373);
        do Memory.poke(row0col4+352, 32141);
        do Memory.poke(row0col4+384, -32139);
        do Memory.poke(row0col4+416, 31749);
        do Memory.poke(row0col4+448, 393);
        do Memory.poke(row0col4+480, -32143);

        do Memory.poke(row1col4+0, 31745);
        do Memory.poke(row1col4+32, 1);
        do Memory.poke(row1col4+64, -31);
        do Memory.poke(row1col4+96, -13295);
        do Memory.poke(row1col4+128, -1783);
        do Memory.poke(row1col4+160, 12325);
        do Memory.poke(row1col4+192, 5125);
        do Memory.poke(row1col4+224, 4229);
        do Memory.poke(row1col4+256, 12309);
        do Memory.poke(row1col4+288, -3579);
        do Memory.poke(row1col4+320, -28635);
        do Memory.poke(row1col4+352, 30857);
        do Memory.poke(row1col4+384, 19473);
        do Memory.poke(row1col4+416, -31);
        do Memory.poke(row1col4+448, 1);
        do Memory.poke(row1col4+480, -1);

        do Memory.poke(row2col4+0, -1);
        do Memory.poke(row2col4+32, 1);
        do Memory.poke(row2col4+64, 15005);
        do Memory.poke(row2col4+96, 19109);
        do Memory.poke(row2col4+128, 15005);
        do Memory.poke(row2col4+160, 19109);
        do Memory.poke(row2col4+192, 19357);
        do Memory.poke(row2col4+224, 1);
        do Memory.poke(row2col4+256, -1);
        do Memory.poke(row2col4+288, 30);
        do Memory.poke(row2col4+320, 30);
        do Memory.poke(row2col4+352, -1);
        do Memory.poke(row2col4+384, 30);
        do Memory.poke(row2col4+416, -1);
        do Memory.poke(row2col4+448, 30);
        do Memory.poke(row2col4+480, 30);

        // Sixth col
        do Memory.poke(row0col5+0, -1);
        do Memory.poke(row0col5+32, -16384);
        do Memory.poke(row0col5+64, -16384);
        do Memory.poke(row0col5+96, -28928);
        do Memory.poke(row0col5+128, -24704);
        do Memory.poke(row0col5+160, -17472);
        do Memory.poke(row0col5+192, -16960);
        do Memory.poke(row0col5+224, -16672);
        do Memory.poke(row0col5+256, -16672);
        do Memory.poke(row0col5+288, -24608);
        do Memory.poke(row0col5+320, -28720);
        do Memory.poke(row0col5+352, -31860);
        do Memory.poke(row0col5+384, -32700);
        do Memory.poke(row0col5+416, -32728);
        do Memory.poke(row0col5+448, -32720);
        do Memory.poke(row0col5+480, -16384);

        do Memory.poke(row1col5+0, -16384);
        do Memory.poke(row1col5+32, -16384);
        do Memory.poke(row1col5+64, -30721);
        do Memory.poke(row1col5+96, -28827);
        do Memory.poke(row1col5+128, -24709);
        do Memory.poke(row1col5+160, -17017);
        do Memory.poke(row1col5+192, -24576);
        do Memory.poke(row1col5+224, -24564);
        do Memory.poke(row1col5+256, -16577);
        do Memory.poke(row1col5+288, -23581);
        do Memory.poke(row1col5+320, -16498);
        do Memory.poke(row1col5+352, -25409);
        do Memory.poke(row1col5+384, -28712);
        do Memory.poke(row1col5+416, -30721);
        do Memory.poke(row1col5+448, -16384);
        do Memory.poke(row1col5+480, -1);

        do Memory.poke(row2col5+0, -1);
        do Memory.poke(row2col5+32, -16384);
        do Memory.poke(row2col5+64, -28945);
        do Memory.poke(row2col5+96, -28127);
        do Memory.poke(row2col5+128, -29075);
        do Memory.poke(row2col5+160, -28119);
        do Memory.poke(row2col5+192, -27921);
        do Memory.poke(row2col5+224, -16384);
        do Memory.poke(row2col5+256, -1);
        do Memory.poke(row2col5+288, 30720);
        do Memory.poke(row2col5+320, 30720);
        do Memory.poke(row2col5+352, -1);
        do Memory.poke(row2col5+384, 30720);
        do Memory.poke(row2col5+416, -1);
        do Memory.poke(row2col5+448, 30720);
        do Memory.poke(row2col5+480, 30720);

        // Seventh col
        do Memory.poke(row0col6+0, -1);
        do Memory.poke(row0col6+32, -14463);
        do Memory.poke(row0col6+64, 10305);
        do Memory.poke(row0col6+96, 20641);
        do Memory.poke(row0col6+128, 4641);
        do Memory.poke(row0col6+160, 15481);
        do Memory.poke(row0col6+192, 17029);
        do Memory.poke(row0col6+224, -31477);
        do Memory.poke(row0col6+256, -28381);
        do Memory.poke(row0col6+288, -24253);
        do Memory.poke(row0col6+320, -31477);
        do Memory.poke(row0col6+352, -28381);
        do Memory.poke(row0col6+384, -30445);
        do Memory.poke(row0col6+416, 17029);
        do Memory.poke(row0col6+448, 15481);
        do Memory.poke(row0col6+480, 1);

        do Memory.poke(row1col6+0, -28927);
        do Memory.poke(row1col6+32, 20609);
        do Memory.poke(row1col6+64, -24255);
        do Memory.poke(row1col6+96, 9281);
        do Memory.poke(row1col6+128, 30961);
        do Memory.poke(row1col6+160, -31479);
        do Memory.poke(row1col6+192, 2581);
        do Memory.poke(row1col6+224, 8773);
        do Memory.poke(row1col6+256, 17029);
        do Memory.poke(row1col6+288, 2581);
        do Memory.poke(row1col6+320, 8773);
        do Memory.poke(row1col6+352, 4645);
        do Memory.poke(row1col6+384, -31479);
        do Memory.poke(row1col6+416, 30961);
        do Memory.poke(row1col6+448, 1);
        do Memory.poke(row1col6+480, -1);

        do Memory.poke(row2col6+0, -1);
        do Memory.poke(row2col6+32, 1);
        do Memory.poke(row2col6+64, 30577);
        do Memory.poke(row2col6+96, 9553);
        do Memory.poke(row2col6+128, 9585);
        do Memory.poke(row2col6+160, 9489);
        do Memory.poke(row2col6+192, 10001);
        do Memory.poke(row2col6+224, 1);
        do Memory.poke(row2col6+256, -1);
        do Memory.poke(row2col6+288, 30);
        do Memory.poke(row2col6+320, 30);
        do Memory.poke(row2col6+352, -1);
        do Memory.poke(row2col6+384, 30);
        do Memory.poke(row2col6+416, -1);
        do Memory.poke(row2col6+448, 30);
        do Memory.poke(row2col6+480, 30);

        // Eigth col
        do Memory.poke(row0col7+0, -1);
        do Memory.poke(row0col7+32, -15901);
        do Memory.poke(row0col7+64, -32236);
        do Memory.poke(row0col7+96, -31704);
        do Memory.poke(row0col7+128, -31607);
        do Memory.poke(row0col7+160, -28898);
        do Memory.poke(row0col7+192, -28511);
        do Memory.poke(row0col7+224, -24254);
        do Memory.poke(row0col7+256, -23480);
        do Memory.poke(row0col7+288, -22448);
        do Memory.poke(row0col7+320, -24254);
        do Memory.poke(row0col7+352, -23480);
        do Memory.poke(row0col7+384, -23996);
        do Memory.poke(row0col7+416, -28511);
        do Memory.poke(row0col7+448, -28898);
        do Memory.poke(row0col7+480, -16384);

        do Memory.poke(row1col7+0, -15417);
        do Memory.poke(row1col7+32, -31704);
        do Memory.poke(row1col7+64, -30640);
        do Memory.poke(row1col7+96, -30446);
        do Memory.poke(row1col7+128, -25028);
        do Memory.poke(row1col7+160, -24254);
        do Memory.poke(row1col7+192, -15739);
        do Memory.poke(row1col7+224, -14191);
        do Memory.poke(row1col7+256, -12127);
        do Memory.poke(row1col7+288, -15739);
        do Memory.poke(row1col7+320, -14191);
        do Memory.poke(row1col7+352, -15223);
        do Memory.poke(row1col7+384, -24254);
        do Memory.poke(row1col7+416, -25028);
        do Memory.poke(row1col7+448, -16384);
        do Memory.poke(row1col7+480, -1);

        do Memory.poke(row2col7+0, -1);
        do Memory.poke(row2col7+32, -16384);
        do Memory.poke(row2col7+64, -30857);
        do Memory.poke(row2col7+96, -31451);
        do Memory.poke(row2col7+128, -31449);
        do Memory.poke(row2col7+160, -31451);
        do Memory.poke(row2col7+192, -30939);
        do Memory.poke(row2col7+224, -16384);
        do Memory.poke(row2col7+256, -1);
        do Memory.poke(row2col7+288, 30720);
        do Memory.poke(row2col7+320, 30720);
        do Memory.poke(row2col7+352, -1);
        do Memory.poke(row2col7+384, 30720);
        do Memory.poke(row2col7+416, -1);
        do Memory.poke(row2col7+448, 30720);
        do Memory.poke(row2col7+480, 30720);

        // Nineth col
        do Memory.poke(row0col8+0, -1);
        do Memory.poke(row0col8+32, 1);
        do Memory.poke(row0col8+64, 24577);
        do Memory.poke(row0col8+96, -27679);
        do Memory.poke(row0col8+128, -27631);
        do Memory.poke(row0col8+160, 2057);
        do Memory.poke(row0col8+192, 1041);
        do Memory.poke(row0col8+224, 29729);
        do Memory.poke(row0col8+256, -29663);
        do Memory.poke(row0col8+288, 21057);
        do Memory.poke(row0col8+320, -3615);
        do Memory.poke(row0col8+352, 2329);
        do Memory.poke(row0col8+384, -2939);
        do Memory.poke(row0col8+416, 2181);
        do Memory.poke(row0col8+448, -31607);
        do Memory.poke(row0col8+480, 25265);

        do Memory.poke(row1col8+0, -27839);
        do Memory.poke(row1col8+32, -28799);
        do Memory.poke(row1col8+64, 18625);
        do Memory.poke(row1col8+96, -23519);
        do Memory.poke(row1col8+128, 17441);
        do Memory.poke(row1col8+160, 9281);
        do Memory.poke(row1col8+192, 5505);
        do Memory.poke(row1col8+224, 6657);
        do Memory.poke(row1col8+256, 9217);
        do Memory.poke(row1col8+288, -10239);
        do Memory.poke(row1col8+320, 1025);
        do Memory.poke(row1col8+352, 1025);
        do Memory.poke(row1col8+384, 2049);
        do Memory.poke(row1col8+416, -4095);
        do Memory.poke(row1col8+448, 1);
        do Memory.poke(row1col8+480, -1);

        do Memory.poke(row2col8+0, -1);
        do Memory.poke(row2col8+32, 1);
        do Memory.poke(row2col8+64, -8763);
        do Memory.poke(row2col8+96, -30651);
        do Memory.poke(row2col8+128, -30523);
        do Memory.poke(row2col8+160, -30651);
        do Memory.poke(row2col8+192, -30243);
        do Memory.poke(row2col8+224, 1);
        do Memory.poke(row2col8+256, -1);
        do Memory.poke(row2col8+288, 30);
        do Memory.poke(row2col8+320, 30);
        do Memory.poke(row2col8+352, -1);
        do Memory.poke(row2col8+384, 30);
        do Memory.poke(row2col8+416, -1);
        do Memory.poke(row2col8+448, 30);
        do Memory.poke(row2col8+480, 30);

        // Tenth col
        do Memory.poke(row0col9+0, -1);
        do Memory.poke(row0col9+32, -16384);
        do Memory.poke(row0col9+64, -32760);
        do Memory.poke(row0col9+96, -32748);
        do Memory.poke(row0col9+128, -32750);
        do Memory.poke(row0col9+160, -32515);
        do Memory.poke(row0col9+192, -32510);
        do Memory.poke(row0col9+224, -32574);
        do Memory.poke(row0col9+256, -32729);
        do Memory.poke(row0col9+288, -31768);
        do Memory.poke(row0col9+320, -31727);
        do Memory.poke(row0col9+352, -32222);
        do Memory.poke(row0col9+384, -32475);
        do Memory.poke(row0col9+416, -32478);
        do Memory.poke(row0col9+448, -32601);
        do Memory.poke(row0col9+480, -32580);

        do Memory.poke(row1col9+0, -25278);
        do Memory.poke(row1col9+32, -24433);
        do Memory.poke(row1col9+64, -28400);
        do Memory.poke(row1col9+96, -30417);
        do Memory.poke(row1col9+128, -30448);
        do Memory.poke(row1col9+160, -31456);
        do Memory.poke(row1col9+192, -31584);
        do Memory.poke(row1col9+224, -31808);
        do Memory.poke(row1col9+256, -32608);
        do Memory.poke(row1col9+288, -32481);
        do Memory.poke(row1col9+320, -32247);
        do Memory.poke(row1col9+352, -32246);
        do Memory.poke(row1col9+384, -32502);
        do Memory.poke(row1col9+416, -32527);
        do Memory.poke(row1col9+448, -16384);
        do Memory.poke(row1col9+480, -1);

        do Memory.poke(row2col9+0, -1);
        do Memory.poke(row2col9+32, -16384);
        do Memory.poke(row2col9+64, -25131);
        do Memory.poke(row2col9+96, -31660);
        do Memory.poke(row2col9+128, -29612);
        do Memory.poke(row2col9+160, -31660);
        do Memory.poke(row2col9+192, -25124);
        do Memory.poke(row2col9+224, -16384);
        do Memory.poke(row2col9+256, -1);
        do Memory.poke(row2col9+288, 30720);
        do Memory.poke(row2col9+320, 30720);
        do Memory.poke(row2col9+352, 32767);
        do Memory.poke(row2col9+384, 30720);
        do Memory.poke(row2col9+416, 32767);
        do Memory.poke(row2col9+448, 30720);
        do Memory.poke(row2col9+480, 30720);

        return;
    }
    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}